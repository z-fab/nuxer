"""Itens fabzenda

Revision ID: 581bca0205f6
Revises: b169e1c8fd50
Create Date: 2025-04-24 12:02:23.653721

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "581bca0205f6"
down_revision: str | None = "b169e1c8fd50"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "item_definitions",
        sa.Column("item_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("emoji", sa.String(length=5), nullable=False),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "effect_type",
            sa.Enum("STATE_CHANGE", "MULTIPLIER", name="effect_type_enum"),
            server_default=sa.text("'STATE_CHANGE'"),
            nullable=False,
        ),
        sa.Column("effect", sa.JSON(), nullable=True),
        sa.Column("duration", sa.Integer(), nullable=True),
        sa.Column("available", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("item_id"),
        schema="fabzenda",
    )
    op.create_table(
        "inventory_items",
        sa.Column("inventory_id", sa.Integer(), nullable=False),
        sa.Column("item_id", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("user_animal_id", sa.Integer(), nullable=True),
        sa.Column("quantity", sa.Integer(), nullable=True),
        sa.Column("equipped_at", sa.DateTime(), nullable=True),
        sa.Column("expired_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["item_id"],
            ["fabzenda.item_definitions.item_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_animal_id"],
            ["fabzenda.user_animals.animal_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["public.users.id"],
        ),
        sa.PrimaryKeyConstraint("inventory_id"),
        schema="fabzenda",
    )

    seed_item_definitions = sa.text("""
        INSERT INTO fabzenda.item_definitions (item_id, name, emoji, price, description, effect_type, effect, duration, available)
        VALUES
        (1, 'Potinho', 'ðŸ«™', 50, 'Um potinho mÃ¡gico usado para guardar os seres mais fofos do planeta', 'STATE_CHANGE', '{"ADD_SLOT_FARM": 1}', NULL, true);
                                
        ALTER SEQUENCE fabzenda.item_definitions_item_id_seq RESTART WITH 2;
    """)
    op.execute(seed_item_definitions)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("inventory_items", schema="fabzenda")
    op.drop_table("item_definitions", schema="fabzenda")
    op.execute(sa.text("DROP TYPE effect_type_enum;"))
    # ### end Alembic commands ###
