"""initial schema

Revision ID: b169e1c8fd50
Revises:
Create Date: 2025-04-18 17:54:13.810787

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b169e1c8fd50"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""

    op.execute(sa.text("CREATE SCHEMA IF NOT EXISTS fabbank"))
    op.execute(sa.text("CREATE SCHEMA IF NOT EXISTS fabzenda"))

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "itens_loja",
        sa.Column("cod", sa.String(), nullable=False),
        sa.Column("nome", sa.String(), nullable=True),
        sa.Column("descricao", sa.String(), nullable=True),
        sa.Column("valor", sa.Integer(), nullable=False),
        sa.Column("valor_real", sa.Boolean(), nullable=True),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("enable", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("cod"),
        schema="fabbank",
    )
    op.create_table(
        "animal_modifiers",
        sa.Column("modifier_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("emoji", sa.String(length=5), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("rarity", sa.Integer(), nullable=False),
        sa.Column("feeding_cost_multiplier", sa.Float(), nullable=False),
        sa.Column("burial_cost_multiplier", sa.Float(), nullable=False),
        sa.Column("hunger_rate_multiplier", sa.Float(), nullable=False),
        sa.Column("expire_multiplier", sa.Float(), nullable=False),
        sa.Column("reward_multiplier", sa.Float(), nullable=False),
        sa.Column("lifespan_multiplier", sa.Float(), nullable=False),
        sa.Column("found_coin_percentage", sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint("modifier_id"),
        schema="fabzenda",
    )
    op.create_table(
        "animal_types",
        sa.Column("type_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("emoji", sa.String(length=10), nullable=False),
        sa.Column("base_price", sa.Integer(), nullable=False),
        sa.Column("base_reward", sa.Integer(), nullable=False),
        sa.Column("hunger_rate", sa.Integer(), nullable=False),
        sa.Column("lifespan", sa.Integer(), nullable=False),
        sa.Column("available", sa.Boolean(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("type_id"),
        schema="fabzenda",
    )
    op.create_table(
        "config",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("nome", sa.String(), nullable=False),
        sa.Column("slack_id", sa.String(), nullable=False),
        sa.Column("notion_id", sa.String(), nullable=False),
        sa.Column("notion_user_id", sa.String(), nullable=True),
        sa.Column("apelido", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("ativo", sa.Boolean(), nullable=False),
        sa.Column("role", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_table(
        "wallet",
        sa.Column("wallet_id", sa.String(), nullable=False),
        sa.Column("balance", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["public.users.id"],
        ),
        sa.PrimaryKeyConstraint("wallet_id"),
        schema="fabbank",
    )
    op.create_table(
        "user_animals",
        sa.Column("animal_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("type_id", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(length=100), nullable=True),
        sa.Column("purchase_date", sa.DateTime(), nullable=True),
        sa.Column("last_fed", sa.DateTime(), nullable=True),
        sa.Column("food_slot", sa.Integer(), nullable=True),
        sa.Column("health", sa.Integer(), nullable=True),
        sa.Column("expiry_date", sa.DateTime(), nullable=True),
        sa.Column("is_alive", sa.Boolean(), nullable=True),
        sa.Column("modifier_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["modifier_id"],
            ["fabzenda.animal_modifiers.modifier_id"],
        ),
        sa.ForeignKeyConstraint(
            ["type_id"],
            ["fabzenda.animal_types.type_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["public.users.id"],
        ),
        sa.PrimaryKeyConstraint("animal_id"),
        schema="fabzenda",
    )
    op.create_table(
        "user_farm",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("max_animals", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["public.users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="fabzenda",
    )
    op.create_table(
        "transaction",
        sa.Column("transaction_id", sa.String(), nullable=False),
        sa.Column("wallet_from_id", sa.String(), nullable=False),
        sa.Column("wallet_to_id", sa.String(), nullable=False),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["wallet_from_id"],
            ["fabbank.wallet.wallet_id"],
        ),
        sa.ForeignKeyConstraint(
            ["wallet_to_id"],
            ["fabbank.wallet.wallet_id"],
        ),
        sa.PrimaryKeyConstraint("transaction_id"),
        schema="fabbank",
    )

    # ### end Alembic commands ###

    seed_config = sa.text("""
        INSERT INTO config (id,name,value) VALUES
        (2,'MAX_ANIMALS','3'),
        (1,'RESERVA_REAL','350'),
        (3,'N_LOTTERY','3'); 
    """)
    op.execute(seed_config)

    seed_user = sa.text("""
        INSERT INTO users (id,nome,slack_id,notion_id,apelido,email,ativo,notion_user_id,"role") VALUES
        (0,'FabBank','U02AL3FMQR4','93b8205d6b864e6bb0f3eb3c6d4ad5a9','FBank',NULL,true,NULL,0),
        (1,'Fabricio Zillig','U02AL3FMQR4','93b8205d6b864e6bb0f3eb3c6d4ad5a9','Fabs','fabricio.zillig@digitalcode.com.br',true,'38d10f0208504821bc8b52fa2286f858',0),
        (6,'Kym Souza','U039Z7QTC0K','571f6ba84bf74da392cb9c719412cc14','Kym','kym.souza@digitalcode.com.br',true,'00a098dc9bf14b28b73318371ad491d4',1),
        (2,'Akemi Mitsueda','U03MMK84JDD','29c19816cc064858a1e2e7cdb53ce731','Akemis','akemi.mitsueda@digitalcode.com.br',true,'49f8b8c80f384204b817fe065f01c659',1),
        (3,'Amanda Menoti','U035GKUENTU','80a65910befb4f2186d15120e17add16','Amands','amanda.menoti@digitalcode.com.br',true,'8dc784423ee5459eaedefdaf02119236',1),
        (4,'Danillo Santos','U029TTDD5HB','7ad1737ded8b482984b2399fe46859d7','Dan','danillo.santos@digitalcode.com.br',true,'611b568e980147b6b5a8af2d18ee12b5',1),
        (5,'Gabriela Vallini','U02LKFXCG3U','f3a43d1acf26460bab867d3d0f77ecb9','Gabs','gabriela.vallini@digitalcode.com.br',true,'f153b68c1989435295d36a8adb5d72d4',1),
        (8,'Felipe Botelho','U04H9L3QMDH','4940589b7446470ca1efd24780653d64','Fe','felipe.botelho@digitalcode.com.br',true,'d224c62468eb42aa93b8bbcd3ff93716',1),
        (20,'Clara Fadel','U02A4C13N84','78f3adc5836a442abb4adacce095fa1f','Clara','clara.fadel@digitalcode.com.br',true,'ea75272ae4d74dbfb589371e0f356e18',1),
        (23,'Ana Trindade','U07N6RDUU30','143216fde88b807f898bd719da5c0bc0','Ana','ana.trindade@dentsu.com',true,135d872b594c819f903b0002e037fd05,1),
        (26,'Lara Buratinne','U080BH7R6HH','13c216fde88b806da1a9d3d06b3bf7b4','Lara','lara.buratinne@merkle.com',true,13cd872b594c817fae950002280ffb4b,1),
        (9,'Mariana da Matta','U01HVP29E87','e36c3d8c0a324cae8092cf82ea6e0501','Mari','mariana.machado-ext@digitalcode.com.br',true,NULL,1),
        (25,'Aline Santos','U0808BGUGGM','13b216fde88b80e68e16d1dcc6b02ae7','Aline','aline.santos@merkle.com',true,NULL,2),
        (10,'Cássia Silva','U027WRW0FAN','5b3e7162e2574e68acd14b378ec06e43','Cássia','cassia.silva@digitalcode.com.br',true,NULL,2),
        (11,'Marcela Castro','U02257W8G4B','a61c06ef5c924a57abe897db1be28e85','Ma','marcela.castro@digitalcode.com.br',true,NULL,2),
        (12,'Fernada Galvão','U05J1CCFGMN','6e09dbfe20f04b9e961a07fbfa29d461','Fernada','fernanda.galvao@digitalcode.com.br',true,NULL,2),
        (13,'Alessandra Costa','U5JH23HSN','720e84fe3205493bbec5d6c7007afa9c','Ale','alessandra.costa@digitalcode.com.br',true,NULL,2),
        (17,'Diniz','U01CKJ9MLSC','6423ae909860436a99f73757fb1aafe6','Diniz','ricardo.diniz@digitalcode.com.br',true,NULL,2),
        (19,'Priscila Lanner','U036GKKETPT','96fb4c6f533645d2a04cb3ab4958498c','Pri','priscila.roza@digitalcode.com.br',true,NULL,2),
        (24,'Raquel Gutierrez','U07PXHLFND8','c32d52c2e33242228889099f0b564ea7','Raquel','raquel.gutierrez@merkle.com',true,NULL,2);
        """)
    op.execute(seed_user)

    seed_wallet = sa.text("""
        INSERT INTO fabbank.wallet (wallet_id,user_id,balance) VALUES
        ('FBA001',0,0),
        ('D0ZMW0',2,0),
        ('Q5V3YD',3,0),
        ('W771TX',4,0),
        ('V07576',5,0),
        ('O5481I',6,0),
        ('0Z087Z',8,0),
        ('NNQ303',20,0),
        ('JV52JBF',23,0),
        ('2JB5523',26,0),
        ('7E5925',1,0);
    """)
    op.execute(seed_wallet)

    seed_item_loja = sa.text("""
        INSERT INTO fabbank.itens_loja (cod,nome,descricao,valor,valor_real,amount,"enable") VALUES
        ('F4','Gift Card do Nuxer','Gift Card aleatório de até R$ 50',40,true,2,true),
        ('F5','Ticket - Sorteio do Mês','Um número da sorte para concorrer no sorteio do mês',2,false,-1,true),
        ('O1','One on One - 30 min','Conversa exclusiva de 30 min com o Fabs sobre qualquer assunto',20,false,-1,true),
        ('F3','5 Dentsu Dollar','Comprar 5 dentsu dollar',21,true,2,true),
        ('F2','3 Dentsu Dollar','Comprar 3 dentsu dollar',13,true,3,true),
        ('F1','1 Dentsu Dollar','Comprar 1 dentsu dollar',5,true,-1,true);
    """)
    op.execute(seed_item_loja)

    seed_animal_types = sa.text("""
        INSERT INTO fabzenda.animal_types (type_id,"name",emoji,base_price,base_reward,hunger_rate,lifespan,available,description) VALUES
        /* ——— Comuns ——— */
        (1 ,'Rato'     ,'🐁',  5, 2 ,12 ,10 ,true , 'Miúdo, se infiltra em qualquer bolso em busca de trocados.'),
        (2 ,'Galinha'  ,'🐓',  8, 3 ,12 ,12 ,true , 'Ciscando sonhos no terreiro, canta moedas ao amanhecer.'),
        (3 ,'Abelha'   ,'🐝', 10, 4 , 8 , 7 ,true , 'Zum‑zum frenético que transforma pólen em tinlints de ouro.'),
        (4 ,'Coelho'   ,'🐇', 12, 4 ,10 ,11 ,true , 'Salta de ideia em ideia, multiplicando centavos em segredo.'),
        (5 ,'Pato'     ,'🦆', 12, 4 ,14 ,12 ,true , 'Nada sossegado; cada “quack” ecoa como pingos na latinha.'),
        /* ——— Intermediários ——— */
        (6 ,'Porco'    ,'🐖', 18, 5 ,12 ,14 ,true , 'Fuça lama, acha pepitas – jamais subestime um focinho curioso.'),
        (7 ,'Gato'     ,'🐈', 20, 6 ,15 ,14 ,true, 'Ronrona vibrações que atraem sorte enquanto finge desdém.'),
        (8 ,'Castor'   ,'🦫', 22, 6 ,16 ,15 ,true , 'Engenheiro de represas que represam fortuna gota a gota.'),
        (9 ,'Ovelha'   ,'🐑', 25, 7 ,16 ,15 ,true , 'Fia nuvens de lã e deixa macios rendimentos no tear da vida.'),
        (10,'Lontra'   ,'🦦', 28, 7 ,14 ,13 ,true, 'Brinca com pedrinhas‑cofre e estoura gargalhadas em moedas.'),
        /* ——— Raros ——— */
        (11,'Cachorro' ,'🐕', 32, 8 ,15 ,16 ,true, 'Fareja oportunidades soterradas e abana o rabo para o lucro.'),
        (12,'Raposa'   ,'🦊', 34, 8 ,12 ,13 ,true, 'Pisca um olho, some com o prejuízo – traz só proveito na boca.'),
        (13,'Lhama'    ,'🦙', 36, 9 ,18 ,17 ,true, 'Cuspe certeiro em despesas, passo firme rumo a altitudes de ganho.'),
        (14,'Vaca'     ,'🐄', 38, 9 ,18 ,18 ,true, 'Muge baixo, enche baldes e cofres com a mesma paciência.'),
        (15,'Cabra'    ,'🐐', 40,10 ,16 ,17 ,true, 'Escala penhascos de mercado como se fossem colinas de alfafa.'),
        /* ——— Altos valores ——— */
        (16,'Cavalo'   ,'🐴', 45,10 ,18 ,19 ,true, 'Galopa notícias frescas e aposta no vento a favor.'),
        (17,'Coruja'   ,'🦉', 46,10 ,16 ,18 ,true, 'Vira a cabeça 270° para ver lucro que ninguém enxergou.'),
        (18,'Pinguim'  ,'🐧', 47,11 ,16 ,19 ,true, 'Desliza em filas de gelo como quem saca notas na maquininha.'),
        (19,'Macaco'   ,'🐒', 49,11 ,14 ,18 ,true, 'Pulando de galho em galho, nunca deixa passar um trocado.'),
        (20,'Panda'    ,'🐼', 50,12 ,18 ,21 ,true, 'Mastiga bambu zen – e expira dividendos fofinhos.');
    """)
    op.execute(seed_animal_types)

    seed_animal_modifiers = sa.text("""
        INSERT INTO fabzenda.animal_modifiers (modifier_id,"name",emoji,description,rarity, feeding_cost_multiplier,burial_cost_multiplier, hunger_rate_multiplier,expire_multiplier, reward_multiplier,lifespan_multiplier, found_coin_percentage) VALUES
        /* ——— Comuns ——— */
        (1 ,'Faminto'   ,'🍽️', 'Olhos de geladeira aberta: engole o estoque, devolve brilho em ouro.', 0,1.8,1.0,0.7,1.0,1.3,0.9,0.0),
        (2 ,'Frugal'    ,'💰', 'Conta ração por ração; economia dá aquele “tchan” especial.', 0,0.6,1.0,1.1,1.0,0.9,1.1,0.0),
        (3 ,'Preguiçoso','😴','Boceja, perde a hora do almoço, mas também da folha de pagamento.',0,1.2,1.0,1.2,0.8,0.85,1.1,0.0),
        (4 ,'Resiliente','🛡️', 'Enfrenta vendavais sem pestanejar e renasce mais forte a cada desafio.', 0,1.0,1.0,1.25,1.3,1.0,1.25,0.0),
        /* ——— Raros ——— */
        (5 ,'Sortudo'   ,'🍀', 'Carrega trevo no bolso secreto; prêmios caem como confete verde.', 1,1.0,1.0,1.0,1.1,1.1,1.0,0.0),
        (6 ,'Eficiente' ,'⚙️', 'Tic tac de relógio suíço: nada sobra, tudo rende um pouquinho mais.', 1,0.5,0.5,1.0,1.0,1.1,1.0,0.0),
        (7 ,'Generoso'  ,'🎁', 'Abre o cofre e joga moedas pro alto – mas cobra um enterro de gala.', 1,1.0,1.5,1.0,1.0,1.6,1.0,0.0),
        (8 ,'Amaldiçoado','☠️', 'Sussurro de corvo ao redor; cada passo soa como gasto ecoado.', 1,1.5,1.5,0.9,0.8,0.8,0.8,0.0),
        /* ——— Épicos ——— */
        (9 ,'Etéreo'    ,'✨', 'Come poeira de estrela; some cedo, deixando pólen de ouro cintilar.', 2,0.4,0.0,1.3,1.6,1.4,0.7,0.0),
        (10,'Místico'   ,'🔮', 'Aura de espelho d’água: tudo reflete 20% mais… ou menos, quem sabe?', 2,1.2,1.2,1.2,1.2,1.2,1.2,0.0),
        (11,'Volátil'  ,'🧨', 'Faísca imprevisível: ora chuva de notas, ora fumaça de recibos.', 2,1.0,1.0,1.0,1.0,1.5,1.0,0.0),
        (12,'Doentio'  ,'🤒', 'Tosse miúda, conta alta; recompensa mirrada mas cheia de histórias.', 0,1.8,1.5,0.8,0.7,0.7,0.8,0.0);
    """)
    op.execute(seed_animal_modifiers)


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("transaction", schema="fabbank")
    op.drop_table("user_farm", schema="fabzenda")
    op.drop_table("user_animals", schema="fabzenda")
    op.drop_table("wallet", schema="fabbank")
    op.drop_table("users", schema="public")
    op.drop_table("config", schema="public")
    op.drop_table("animal_types", schema="fabzenda")
    op.drop_table("animal_modifiers", schema="fabzenda")
    op.drop_table("itens_loja", schema="fabbank")
    op.execute(sa.text("DROP SCHEMA IF EXISTS fabbank CASCADE"))
    op.execute(sa.text("DROP SCHEMA IF EXISTS fabzenda CASCADE"))
    # ### end Alembic commands ###
